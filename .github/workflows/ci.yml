name: Build, test and distribute
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: true
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Show java version
        run: java -version

      - name: Validate checksum gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Gradle cache wrapper
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper
      - name: Build mobilecore.aar
        if: github.repository_owner != 'minvws'
        run: |
          mkdir -p ../tmp-go
          pushd ../tmp-go
          if [ ! -e golang ]; then
            wget -O go.tar.gz -- https://dl.google.com/go/go1.16.7.linux-amd64.tar.gz
            printf '349f846599ca816f95f57adc41f789fdd6ade0ffcd325076de4fc3dcf06c72ae1474170ed5760e505a54a3ab10b1aa65d127f14a63cba27dec6672a1bcd2fbc6  go.tar.gz\n' | sha512sum -c
            tar xzf go.tar.gz
            mv go golang
          fi
          export GOPATH="$PWD"
          export GO_LANG="$PWD/golang/bin"
          export GO_COMPILED="$PWD/bin"
          export PATH="$GO_LANG:$GO_COMPILED:$PATH"
          popd
          cd mobilecore-src
          go get golang.org/x/mobile/cmd/gomobile
          go get golang.org/x/mobile/cmd/gobind@latest
          gomobile init
          gomobile bind -target android -o mobilecore.aar github.com/minvws/nl-covid19-coronacheck-mobile-core
          cd ..
          cp mobilecore-src/mobilecore.aar mobilecore/
      - name: Test
        run: ./gradlew testDebug testAccDebug lint
      - name: Write key store
        if: github.event.repository.name != 'nl-covid19-coronacheck-app-android'
        env:
          KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
        run: echo $KEYSTORE_FILE | base64 --decode > keystore.jks
      - name: Build
        if: github.event.repository.name != 'nl-covid19-coronacheck-app-android'
        env:
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: ./gradlew assemAccRelease assemProdRelease bundleProdRelease
      - name: Clean up key store
        if: ${{github.event.repository.name != 'nl-covid19-coronacheck-app-android'}}
        run: rm keystore.jks   
      - name: Archive apks
        if: ${{ (github.ref == 'refs/heads/main' && github.event.repository.name != 'nl-covid19-coronacheck-app-android') || (github.event.repository.name != 'nl-covid19-coronacheck-app-android' && contains(github.event.pull_request.labels.*.name, 'generate-builds')) }}
        uses: actions/upload-artifact@v2
        with:
          name: apks
          path: |
            holder/build/outputs/apk
            verifier/build/outputs/apk
          retention-days: 5
      - name: Archive bundle
        if: ${{ (github.ref == 'refs/heads/main' && github.event.repository.name != 'nl-covid19-coronacheck-app-android') || (github.event.repository.name != 'nl-covid19-coronacheck-app-android' && contains(github.event.pull_request.labels.*.name, 'generate-builds')) }}
        uses: actions/upload-artifact@v2
        with:
          name: bundle
          path: |
            holder/build/outputs/bundle
            verifier/build/outputs/bundle
          retention-days: 5

  distribute:
    if: ${{ (github.ref == 'refs/heads/main' && github.event.repository.name != 'nl-covid19-coronacheck-app-android') || (github.event.repository.name != 'nl-covid19-coronacheck-app-android' && contains(github.event.pull_request.labels.*.name, 'generate-builds')) }}
    env:
      SLACK_WEBHOOK: ${{ secrets.SLACK_URL }}
      SLACK_MESSAGE: 'New apps available for android :green_heart:'
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}
    runs-on: ubuntu-latest
    needs: [ "build-and-test" ]

    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          name: apks
          path: apks
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10.x

      - name: Install firebase-cli
        run: npm install -g firebase-tools
      - name: Distribute holder acc variant
        run: |
          firebase appdistribution:distribute `ls apks/holder/build/outputs/apk/acc/release/holder-*.apk` \
          --app 1:168257592968:android:5df6b2057b90a30826493d \
          --token $FIREBASE_TOKEN \
          --groups testers

      - name: Distribute holder prod variant
        run: |
          firebase appdistribution:distribute `ls apks/holder/build/outputs/apk/prod/release/holder-*.apk` \
          --app 1:168257592968:android:aaa5afb416536fdb26493d \
          --token $FIREBASE_TOKEN \
          --groups testers
          
      - name: Distribute verifier acc variant
        run: |
          firebase appdistribution:distribute `ls apks/verifier/build/outputs/apk/acc/release/verifier-*.apk` \
          --app 1:168257592968:android:e9d445c4115a5c9d26493d \
          --token $FIREBASE_TOKEN \
          --groups testers

      - name: Distribute verifier prod variant
        run: |
          firebase appdistribution:distribute `ls apks/verifier/build/outputs/apk/prod/release/verifier-*.apk` \
          --app 1:168257592968:android:79363a1282863aac26493d \
          --token $FIREBASE_TOKEN \
          --groups testers

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2

